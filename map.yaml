
includes:
    - MapVariables.yaml

variables:
    dotNetLang: (SYSTEM) tools\GetLang.bat deu
    logfile: blahblah.log

env_checks:    
- Exists: <COMMON_BUILD_TOOLS_DIR>\BuzzCopy.py 
- Exists: <CONFIG_DIR>\adddelren_hammer_msi.ini
- Exists: <PASSOLO_DIR>\pslcmd.exe


commands:    
- Exists: <COMMON_BUILD_TOOLS_DIR>\BuzzCopy.py 
- Exists: <CONFIG_DIR>\adddelren_hammer_msi.ini
- Exists: <PASSOLO_DIR>\pslcmd.exe

# this is like calling a count function with 2 arguments
#- count 5: <COMMON_BUILD_TOOLS_DIR>

- RUN: dir .
- RUN ui: dir
- RUN nocheck: "dir n:"

- RUN : 
    - <PASSOLO_DIR>\pslcmd.exe


# download AutoCAD databases
- RUN: <COMMON_BUILD_TOOLS_DIR>\BuzzCopy.py -d -v <swl_vault_autocad_root>/Databases/<LANG>/<ACAD_BUILD>  <LOCFILES_FOLDER>\ref_dbs\<ACAD_BUILD>  *.lpu
    

- RUN: copy <CONFIG_DIR>\hammer_msi.ini <LOCFILES_FOLDER>\ref_dbs\<ACAD_BUILD>\<lang>_hammer_msi.ini

# run addDelRen.bas on the database
# need to jump through a tiny hoop to deal with spaces in the passolo path
#There are other ways this could have been handled, e.g.:
# a) A tool to ensure paths area already escaped in variables  passolo_exe: (SYSTEM) EscpaePath.py <PASSOLO_DIR>\pslcmd.exe
# b) quote the whole string in '' and use "" around the path (similar to shown below
- RUN: 
    - <PASSOLO_DIR>\pslcmd.exe
    - <LOCFILES_FOLDER>\ref_dbs\<ACAD_BUILD>\<lang>_Hammer_Msi.lpu
    - /runmacro=addDelRen.bas

- |
    "<PASSOLO_DIR>\pslcmd.exe" <LOCFILES_FOLDER>\ref_dbs\<ACAD_BUILD>\<lang>_Hammer_Msi.lpu  /runmacro=addDelRen.bas

- RUN: dir  "n:"
